syntax = "proto3";

// protoc --go_out=plugins=grpc:. *.proto
// PATH="${PATH}:${HOME}/go/bin" protoc --go_out=plugins=grpc:. *.proto

option go_package = "pinterest/services/user/proto";

import "google/protobuf/empty.proto";


package user;

message UserReg {
  string  Username = 1;
  string  Password = 2;
  string  FirstName = 3;
  string  LastName = 4;
  string  Email = 5;
}

message UserEditInput {
  string  Username = 1;
  string  FirstName = 2;
  string  LastName = 3;
  string  Email = 4;
}

message UserAuth {
  string  Username = 1;
  string  Password = 2;
}

message UserOutput {
  int64   UserID = 1;
  string  Username = 2;
  string  Email = 3;
  string  Avatar = 4;
  string  FirstName = 5;
  string  LastName = 6;
}

message UsersListOutput {
  repeated UserOutput Users = 1;
}


message UserID {
  uint64 uid = 1;
}

message Username {
  string username = 1;
}

message UploadAvatar {
  oneof data {
    string Extension = 1;
    bytes chunk_data = 2;
  };
}

message UploadAvatarResponse {
  string path = 1;
  uint32 size = 2;
}

message Password {
  string  password = 1;
  uint64  userID = 2;
}

message SearchInput {
  string keyWords = 1;
}

message Error {}

service User {
  rpc   CreateUser(UserReg) returns (UserID) {}
  rpc   EditUser(UserEditInput) returns (Error) {}
  // rpc   UpdateAvatar(stream UploadAvatar) returns (UploadAvatarResponse) {}
  // rpc   DeleteUser(UserID) returns (Error) {}
  rpc   GetUserByUserID(UserID) returns (UserOutput) {}
  rpc   GetUserByUsername(Username) returns (UserOutput) {}
  rpc   GetUsers(google.protobuf.Empty) returns (UsersListOutput) {}
  rpc   ChangePassword(Password) returns (Error) {}
  }