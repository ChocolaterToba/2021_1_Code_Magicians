// Code generated by MockGen. DO NOT EDIT.
// Source: application/board_app.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	entity "pinterest/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockBoardAppInterface is a mock of BoardAppInterface interface.
type MockBoardAppInterface struct {
	ctrl     *gomock.Controller
	recorder *MockBoardAppInterfaceMockRecorder
}

// MockBoardAppInterfaceMockRecorder is the mock recorder for MockBoardAppInterface.
type MockBoardAppInterfaceMockRecorder struct {
	mock *MockBoardAppInterface
}

// NewMockBoardAppInterface creates a new mock instance.
func NewMockBoardAppInterface(ctrl *gomock.Controller) *MockBoardAppInterface {
	mock := &MockBoardAppInterface{ctrl: ctrl}
	mock.recorder = &MockBoardAppInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBoardAppInterface) EXPECT() *MockBoardAppInterfaceMockRecorder {
	return m.recorder
}

// CheckBoard mocks base method.
func (m *MockBoardAppInterface) CheckBoard(userID, boardID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CheckBoard", userID, boardID)
	ret0, _ := ret[0].(error)
	return ret0
}

// CheckBoard indicates an expected call of CheckBoard.
func (mr *MockBoardAppInterfaceMockRecorder) CheckBoard(userID, boardID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CheckBoard", reflect.TypeOf((*MockBoardAppInterface)(nil).CheckBoard), userID, boardID)
}

// CreateBoard mocks base method.
func (m *MockBoardAppInterface) CreateBoard(board *entity.Board) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateBoard", board)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateBoard indicates an expected call of CreateBoard.
func (mr *MockBoardAppInterfaceMockRecorder) CreateBoard(board interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateBoard", reflect.TypeOf((*MockBoardAppInterface)(nil).CreateBoard), board)
}

// DeleteBoard mocks base method.
func (m *MockBoardAppInterface) DeleteBoard(userID, boardID int) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteBoard", userID, boardID)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteBoard indicates an expected call of DeleteBoard.
func (mr *MockBoardAppInterfaceMockRecorder) DeleteBoard(userID, boardID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteBoard", reflect.TypeOf((*MockBoardAppInterface)(nil).DeleteBoard), userID, boardID)
}

// GetBoard mocks base method.
func (m *MockBoardAppInterface) GetBoard(boardID int) (*entity.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBoard", boardID)
	ret0, _ := ret[0].(*entity.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBoard indicates an expected call of GetBoard.
func (mr *MockBoardAppInterfaceMockRecorder) GetBoard(boardID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBoard", reflect.TypeOf((*MockBoardAppInterface)(nil).GetBoard), boardID)
}

// GetBoards mocks base method.
func (m *MockBoardAppInterface) GetBoards(userID int) ([]entity.Board, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBoards", userID)
	ret0, _ := ret[0].([]entity.Board)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBoards indicates an expected call of GetBoards.
func (mr *MockBoardAppInterfaceMockRecorder) GetBoards(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBoards", reflect.TypeOf((*MockBoardAppInterface)(nil).GetBoards), userID)
}

// GetInitUserBoard mocks base method.
func (m *MockBoardAppInterface) GetInitUserBoard(userID int) (int, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetInitUserBoard", userID)
	ret0, _ := ret[0].(int)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetInitUserBoard indicates an expected call of GetInitUserBoard.
func (mr *MockBoardAppInterfaceMockRecorder) GetInitUserBoard(userID interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetInitUserBoard", reflect.TypeOf((*MockBoardAppInterface)(nil).GetInitUserBoard), userID)
}

// UploadBoardAvatar mocks base method.
func (m *MockBoardAppInterface) UploadBoardAvatar(boardID int, imageLink string, imageHeight, imageWidth int, imageAvgColor string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UploadBoardAvatar", boardID, imageLink, imageHeight, imageWidth, imageAvgColor)
	ret0, _ := ret[0].(error)
	return ret0
}

// UploadBoardAvatar indicates an expected call of UploadBoardAvatar.
func (mr *MockBoardAppInterfaceMockRecorder) UploadBoardAvatar(boardID, imageLink, imageHeight, imageWidth, imageAvgColor interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UploadBoardAvatar", reflect.TypeOf((*MockBoardAppInterface)(nil).UploadBoardAvatar), boardID, imageLink, imageHeight, imageWidth, imageAvgColor)
}
