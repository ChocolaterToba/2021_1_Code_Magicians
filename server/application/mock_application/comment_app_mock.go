// Code generated by MockGen. DO NOT EDIT.
// Source: application/comment_app.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	entity "pinterest/domain/entity"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockCommentAppInterface is a mock of CommentAppInterface interface.
type MockCommentAppInterface struct {
	ctrl     *gomock.Controller
	recorder *MockCommentAppInterfaceMockRecorder
}

// MockCommentAppInterfaceMockRecorder is the mock recorder for MockCommentAppInterface.
type MockCommentAppInterfaceMockRecorder struct {
	mock *MockCommentAppInterface
}

// NewMockCommentAppInterface creates a new mock instance.
func NewMockCommentAppInterface(ctrl *gomock.Controller) *MockCommentAppInterface {
	mock := &MockCommentAppInterface{ctrl: ctrl}
	mock.recorder = &MockCommentAppInterfaceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommentAppInterface) EXPECT() *MockCommentAppInterfaceMockRecorder {
	return m.recorder
}

// AddComment mocks base method.
func (m *MockCommentAppInterface) AddComment(arg0 *entity.Comment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "AddComment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// AddComment indicates an expected call of AddComment.
func (mr *MockCommentAppInterfaceMockRecorder) AddComment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AddComment", reflect.TypeOf((*MockCommentAppInterface)(nil).AddComment), arg0)
}

// DeleteComment mocks base method.
func (m *MockCommentAppInterface) DeleteComment(arg0 *entity.Comment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteComment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// DeleteComment indicates an expected call of DeleteComment.
func (mr *MockCommentAppInterfaceMockRecorder) DeleteComment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteComment", reflect.TypeOf((*MockCommentAppInterface)(nil).DeleteComment), arg0)
}

// EditComment mocks base method.
func (m *MockCommentAppInterface) EditComment(arg0 *entity.Comment) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "EditComment", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// EditComment indicates an expected call of EditComment.
func (mr *MockCommentAppInterfaceMockRecorder) EditComment(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "EditComment", reflect.TypeOf((*MockCommentAppInterface)(nil).EditComment), arg0)
}

// GetComments mocks base method.
func (m *MockCommentAppInterface) GetComments(arg0 int) ([]entity.Comment, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetComments", arg0)
	ret0, _ := ret[0].([]entity.Comment)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetComments indicates an expected call of GetComments.
func (mr *MockCommentAppInterfaceMockRecorder) GetComments(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetComments", reflect.TypeOf((*MockCommentAppInterface)(nil).GetComments), arg0)
}
